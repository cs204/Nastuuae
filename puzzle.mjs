import {проверка_моделей,  Символ, Не, И, Или, Импликация, Эквивалентность} from './logic.mjs'


let АРыцарь = new Символ("А - рыцарь.")
let АЛжец = new Символ("А - лжец.")

let БРыцарь = new Символ("Б - рыцарь.")
let БЛжец = new Символ("Б - лжец.")

let ВРыцарь = new Символ("В - рыцарь.")
let ВЛжец = new Символ("В - лжец.")

// Задача 0
// А сказал: "Я и лжец и рыцарь."
let знания0 = new И()
знания0 = new И()
//Эквивалентность, рыцарь - не лжец
знания0.добавить(new Эквивалентность(АРыцарь, new Не(АЛжец)))
//Эквивалентность, сказал правду - значит рыцарь
знания0.добавить(new Эквивалентность(new И(БРыцарь, АЛжец), АРыцарь))

// Задача 1
// А сказал: "Мы оба лжецы."
// Б ни чего не сказал.
let знания1 = new И()
знания1 = new И()
//Эквивалентность, рыцарь - не лжец
знания1.добавить(new Эквивалентность(АРыцарь, new И(БЛжец, АЛжец)))
знания1.добавить(new Или(АЛжец, АРыцарь))
знания1.добавить(new Или(БЛжец, БРыцарь))
знания1.добавить(new Или(БРыцарь, new Не(БЛжец)))


// Задача 2
// А сказал: "Мы одинаковые."
// Б сказал: "Мы разного вида."
let знания2 = new И()

знания2.добавить(new Или(АРыцарь, АЛжец), new Не(new И(АРыцарь, АЛжец)))
знания2.добавить(new Или(БРыцарь, БЛжец), new Не(new И(БРыцарь, БЛжец)))
знания2.добавить(new Импликация(new Или(new И(АЛжец, БЛжец), new И(АРыцарь, БРыцарь)), АЛжец))
знания2.добавить(new Импликация(new Не(new Или(new И(АЛжец, БЛжец), new И(АРыцарь, БРыцарь))), АЛжец))
знания2.добавить(new Импликация(new Или(new И(АРыцарь, БЛжец), new И(АЛжец, БРыцарь)), БРыцарь))
знания2.добавить(new Импликация(new Не(new Или(new И(АРыцарь, БЛжец), new И(АЛжец, БРыцарь))), БРыцарь))


// Задача 3
// А сказал, но мы вы не услышали.
// Б сказал: "А сказал 'Я лжец'."
// Б сказал: "В - лжец."
// В сказал: "А - рыцарь."

let знания3 = new И()

знания3.добавить(new Или(АРыцарь, АЛжец), new Не(new И(АРыцарь, АЛжец)))
знания3.добавить(new Или(БРыцарь, БЛжец), new Не(new И(БРыцарь, БЛжец)))
знания3.добавить(new Или(ВРыцарь, ВЛжец), new Не(new И(ВРыцарь, ВЛжец)))

//Если А говорит правду, А рыцарь или лжец
знания3.добавить(new Импликация(new Или(АРыцарь, АЛжец), АРыцарь))
знания3.добавить(new Импликация(new Не(new Или(АРыцарь, АЛжец)), АЛжец))

//Если Б говорит правду о В, Б рыцарь, в противном случае - лжец
знания3.добавить(new Импликация(БРыцарь, ВЛжец))
знания3.добавить(new Импликация(БЛжец, new Не(ВЛжец)))
знания3.добавить(new Импликация(БРыцарь, new Импликация(АРыцарь, БЛжец)))
знания3.добавить(new Импликация(БРыцарь, new Импликация(АРыцарь, new Не(БЛжец))))

//Если В говорит правду об А, В - рыцарь, в противном случае лжец
знания3.добавить(new Импликация(АРыцарь, ВРыцарь))
знания3.добавить(new Импликация(new Не(АРыцарь), ВЛжец))




let символы = [АРыцарь, АЛжец, БРыцарь, БЛжец, ВРыцарь, ВЛжец]
let задания = {
        "Задание 0": знания0,
        "Задание 1": знания1,
        "Задание 2": знания2,
        "Задание 3": знания3
    }

main()


function main()
{
	for(let задание in задания)
	{
		console.log(задание)
		if(задания[задание].операнды.length == 0)
		    console.log("    Пока не реализована.")
		else
		    for(let  символ of символы)
			if(проверка_моделей(задания[задание], символ))
			    console.log(`    ${символ.имя}`)
	}
}

